<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.proven.business.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.proven.business.model.Reply" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="reply_type" property="replyType" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="from_uid" property="fromUid" jdbcType="VARCHAR" />
    <result column="to_uid" property="toUid" jdbcType="VARCHAR" />
    <result column="to_name" property="toName" jdbcType="VARCHAR" />
    <result column="from_name" property="fromName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    id, comment_id, reply_id, reply_type, content, from_uid, to_uid, to_name, from_name, 
    create_date
  </sql>
  <select id="getReplysByCommentIds" parameterType="java.util.List" resultMap="BaseResultMap">
  select * from t_t_reply where comment_id in 
  <foreach item="item" collection="commentIds" separator="," open="(" close=")" index="">
     #{item, jdbcType=INTEGER}   
   </foreach>
  
  </select>
  
  <update id="updateToName">
  update t_t_reply set to_name=#{name} where to_uid=#{uid}
  </update>
  
  <update id="updateFromName">
  update t_t_reply set from_name=#{name} where from_uid=#{uid}
  </update>
  
  <delete id="deleteByCommentId">
  delete  from t_t_reply where comment_id=#{Id}
  </delete>
</mapper>